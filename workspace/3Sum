class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
            List<Integer> list = new ArrayList<>();
        for (int num: nums) {
            list.add(num);
        }
        if (list.size() < 3){
            return new ArrayList<>();
        }
        Set<List<Integer>> ans = new HashSet<>();
        Collections.sort(list);
        int  n = list.size() -1;
        for(int i =0;i< n-1;i++){
            int beg = i+1;
            int end = n;
            while(beg<end){
                int sum = list.get(i) + list.get(beg) + list.get(end);
                if (sum == 0){
                    ans.add(Arrays.asList(list.get(i),list.get(beg),list.get(end)));
                    beg = beg +1;
                } else if(sum > 0){
                    end = end-1;
                } else {
                    beg = beg +1;
                }
            }
        }
        List<List<Integer>> resp = new LinkedList<>();
        for(List<Integer> elm : ans){
            resp.add(elm);
        }
        return resp;
    
    }
}
